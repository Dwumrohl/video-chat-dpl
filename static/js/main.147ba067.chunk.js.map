{"version":3,"sources":["server/firebase.js","components/AuthenticatedApp/index.jsx","components/MeetingFooter/MeetingFooter.component.js","components/Shared/Card/Card.component.js","components/Participants/Participant/Participant.component.js","components/Participants/Participants.component.js","store/actiontypes.js","store/actioncreator.js","components/MainScreen/MainScreen.component.js","context/auth.js","hooks/useAuth.js","App.js","components/Router/router.jsx","components/UnauthenticatedApp/index.jsx","start.js","reportWebVitals.js","server/peerConnection.js","store/reducer.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","auth","getAuth","db","getFirestore","firepadRef","ref","getDatabase","loginWithGoogle","a","provider","GoogleAuthProvider","signInWithPopup","user","q","query","collection","where","uid","getDocs","docs","length","addDoc","name","displayName","authProvider","email","code","console","error","onAuthStateChanged","logout","signOut","AuthenticatedApp","useState","room","setRoom","romTemp","navigate","useNavigate","className","onClick","roomId","URLSearchParams","window","location","search","get","child","push","key","roomTemp","localStorage","setItem","onSubmit","event","preventDefault","type","value","onChange","e","target","required","placeholder","MeetingFooter","props","mic","video","screen","streamState","setStreamState","setScreenState","isEnabled","currentState","useEffect","onMicClick","onVideoClick","data-tip","icon","faMicrophone","faMicrophoneSlash","title","faVideo","faVideoSlash","onScreenClick","disabled","faDesktop","href","faSignOutAlt","Card","children","Participant","curentIndex","currentParticipant","hideVideo","videoRef","showAvatar","currentUser","id","autoPlay","playsInline","audio","style","background","avatarColor","connect","state","participants","stream","mainStream","useRef","participantKey","Object","keys","current","srcObject","muted","values","gridCol","gridColSize","gridRowSize","Math","ceil","screenPresenter","find","element","map","index","pc","peerConnection","remoteStream","MediaStream","ontrack","streams","getTracks","forEach","track","addTrack","videElement","document","getElementById","SET_MAIN_STREAM","ADD_PARTICIPANT","REMOVE_PARTICIPANT","SET_USER","UPDATE_USER","UPDATE_PARTICIPANT","setMainStream","payload","dispatch","updateUser","participantRef","updateStream","sender","getSenders","s","kind","replaceTrack","getVideoTracks","onScreenShareEnd","navigator","mediaDevices","getUserMedia","localStream","enabled","getDisplayMedia","mediaStream","mediaSource","onended","micEnabled","getAudioTracks","videoEnabled","AuthContext","React","createContext","AuthProvider","useAuthState","login","setTimeout","Provider","useAuth","useContext","Error","addParticipant","newUser","setUser","removeParticipant","userId","updateParticipant","useLocation","getItem","urlTemp","pathname","split","urlRef","userName","getUserStream","onValue","connectedRef","snap","val","defaultPreference","userStatusRef","preferences","onDisconnect","remove","fpdRef","isUserSet","isStreamSet","onChildAdded","preferenceUpdateEvent1","preferenceUpdateEvent","onChildChanged","preferenceSnap","onChildRemoved","Router","exact","path","UnauthenticatedApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updatePreference","preference","currentParticipantRef1","currentParticipantRef","update","createOffer","receiverId","createdID","onicecandidate","candidate","toJSON","offerDescription","setLocalDescription","offer","sdp","set","initializeListensers","hash","currentUserRef","currenOffers","snapshot","data","store","getState","setRemoteDescription","RTCSessionDescription","createAnswer","addIceCandidate","RTCIceCandidate","answer","answerDescription","otherUserId","participantRef1","defaultUserState","servers","iceServers","urls","iceCandidatePoolSize","generateColor","floor","random","toString","addConnection","RTCPeerConnection","newUserId","currentUserId","offerIds","sort","b","localeCompare","createStore","action","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.147ba067.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, signInWithPopup, getAuth, signOut, onAuthStateChanged} from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getDatabase, push, ref, child, set} from \"firebase/database\";\nimport { collection, addDoc,getDocs,\n    query, where } from 'firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCZzeoeLPf9RygQgYkvEI6q5c490KYeChY\",\n  authDomain: \"test-video-chat-4979b.firebaseapp.com\",\n  projectId: \"test-video-chat-4979b\",\n  storageBucket: \"test-video-chat-4979b.appspot.com\",\n  messagingSenderId: \"249820721403\",\n  appId: \"1:249820721403:web:9ce311e53144626720c05e\",\n  databaseURL: \"https://test-video-chat-4979b-default-rtdb.europe-west1.firebasedatabase.app/\"\n};\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth();\nconst db = getFirestore(app);\n\n\nvar firepadRef = ref(getDatabase());\n//export const userName = prompt(\"What's your name?\");\nexport const userName = \"Олег\"; ////\n\nexport function roomTemp(){\n  const urlparams = new URLSearchParams(window.location.search);\n  const roomId = urlparams.get(\"id\");\n  \n  if (roomId) {\n    firepadRef = child(firepadRef, roomId);\n  } else {\n    //var tempRef = push(firepadRef);\n    firepadRef = push(firepadRef);\n    //window.history.replaceState(null, \"Meet\", firepadRef.key);\n  }\n  return firepadRef.key;\n}\n\n\nasync function loginWithGoogle() {\n  try {\n      const provider = new GoogleAuthProvider();       \n\n      const { user } = await signInWithPopup(auth, provider);\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n\n      const docs = await getDocs(q);\n      if (docs.docs.length === 0) {\n\n          await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name: user.displayName,\n      authProvider: \"google\",\n      email: user.email,\n    });\n  }\n      return { uid: user.uid, displayName: user.displayName };\n  } catch (error) {\n      if (error.code !== 'auth/cancelled-popup-request') {\n          console.error(error);\n      }\n\n      return null;\n  }\n}\n\nonAuthStateChanged(auth, (user) => {\n  if (user) {\n    // User is signed in.\n    // ...\n  } else {\n    // User is not signed in.\n    // ...\n  }\n});\n\nconst logout = () => {\n  signOut(auth);\n};\n\n\nexport default firepadRef;\nexport {loginWithGoogle, auth, db, logout};\n","import { userName, logout, roomTemp} from '../../server/firebase';\r\nimport {Link, Navigate, useNavigate} from 'react-router-dom';\r\nimport React, {useState} from \"react\";\r\nimport \"./index.css\";\r\n\r\n// import { Landing } from '../Landing';\r\n// import { ChatRoom } from '../ChatRoom';\r\n\r\n\r\nfunction AuthenticatedApp() {\r\n    const [room, setRoom] = useState(\"\");\r\n    var romTemp = null;\r\n    const navigate = useNavigate();\r\n    //window.room = romTemp; \r\n    function testRoom(){\r\n        romTemp = roomTemp();\r\n        localStorage.setItem(\"roomId\",romTemp);\r\n        //window.location.href='/room/'+romTemp;\r\n        navigate(\"/room/\"+romTemp);\r\n    }\r\n\r\n    const handleSubmit =  (event) => {\r\n        event.preventDefault();\r\n        localStorage.setItem(\"roomId\",room);\r\n        navigate(\"/room/\"+room);\r\n    }\r\n    return (\r\n        <div className='main'>\r\n        <div className='inner'>\r\n            <h3 className='welcome'>Добро пожаловать в приложение для видеосвязи!</h3>\r\n            <div className='divCreate'>\r\n                <button className=\"btns\" onClick={testRoom}>Создать комнату</button>\r\n            </div>\r\n            <div className='forma'>\r\n            <form onSubmit={handleSubmit}>\r\n                <label className='labelRoom'>Введите номер комнаты:</label>\r\n                <div className='inputRoom'>\r\n                <input\r\n                type=\"text\"\r\n                value={room}\r\n                onChange={(e) => setRoom(e.target.value)}\r\n                required\r\n                placeholder='Номер...'\r\n                className='inputRoom'></input>\r\n                </div>\r\n                <input className=\"btns\" type=\"submit\" value=\"Войти\"/>\r\n            </form>\r\n            </div>\r\n            <div className='divOut'>\r\n                <button className=\"leaveBtn\" onClick={logout}>Выход из аккаунта</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport { AuthenticatedApp };","import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMicrophone,\n  faVideo,\n  faDesktop,\n  faVideoSlash,\n  faMicrophoneSlash,\n  faSignOutAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./MeetingFooter.css\";\nconst MeetingFooter = (props) => {\n  const [streamState, setStreamState] = useState({\n    mic: true,\n    video: false,\n    screen: false,\n  });\n  const micClick = () => {\n    setStreamState((currentState) => {\n      return {\n        ...currentState,\n        mic: !currentState.mic,\n      };\n    });\n  };\n\n  const onVideoClick = () => {\n    setStreamState((currentState) => {\n      return {\n        ...currentState,\n        video: !currentState.video,\n      };\n    });\n  };\n\n  const onLeaveClick = () => {\n    window.location.href = \"/\";\n  }\n\n  const onScreenClick = () => {\n    props.onScreenClick(setScreenState);\n  };\n\n  const setScreenState = (isEnabled) => {\n    setStreamState((currentState) => {\n      return {\n        ...currentState,\n        screen: isEnabled,\n      };\n    });\n  };\n  useEffect(() => {\n    props.onMicClick(streamState.mic);\n  }, [streamState.mic]);\n  useEffect(() => {\n    props.onVideoClick(streamState.video);\n  }, [streamState.video]);\n  return (\n    <div className=\"meeting-footer\">\n      <div\n        className={\"meeting-icons \" + (!streamState.mic ? \"active\" : \"\")}\n        data-tip={streamState.mic ? \"Выключить микрофон\" : \"Включить микрофон\"}\n        onClick={micClick}\n      >\n        <FontAwesomeIcon\n          icon={!streamState.mic ? faMicrophoneSlash : faMicrophone}\n          title=\"Mute\"\n        />\n      </div>\n      <div\n        className={\"meeting-icons \" + (!streamState.video ? \"active\" : \"\")}\n        data-tip={streamState.video ? \"Выключить камеру\" : \"Включить камеру\"}\n        onClick={onVideoClick}\n      >\n        <FontAwesomeIcon icon={!streamState.video ? faVideoSlash : faVideo} />\n      </div>\n      <div\n        className=\"meeting-icons\"\n        data-tip=\"Демонстрация экрана\"\n        onClick={onScreenClick}\n        disabled={streamState.screen}\n      >\n        <FontAwesomeIcon icon={faDesktop} />\n      </div>\n      <div \n      onClick={onLeaveClick}\n      className=\"meeting-icons\"\n      data-tip=\"Выйти\"\n      >\n          <FontAwesomeIcon icon={faSignOutAlt} />\n      </div>\n      <ReactTooltip />\n    </div>\n  );\n};\n\nexport default MeetingFooter;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../../Shared/Card/Card.component\";\nimport { faMicrophoneSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Participant.css\";\n\nexport const Participant = (props) => {\n  const {\n    curentIndex,\n    currentParticipant,\n    hideVideo,\n    videoRef,\n    showAvatar,\n    currentUser,\n  } = props;\n  if (!currentParticipant) return <></>;\n  return (\n    <div className={`participant ${hideVideo ? \"hide\" : \"\"}`}>\n      <Card>\n        <video\n          ref={videoRef}\n          className=\"video\"\n          id={`participantVideo${curentIndex}`}\n          autoPlay\n          playsInline\n        ></video>\n        {!currentParticipant.audio && (\n          <FontAwesomeIcon\n            className=\"muted\"\n            icon={faMicrophoneSlash}\n            title=\"Muted\"\n          />\n        )}\n        {showAvatar && (\n          <div\n            style={{ background: currentParticipant.avatarColor }}\n            className=\"avatar\"\n          >\n            {currentParticipant.name[0]}\n          </div>\n        )}\n        <div className=\"name\">\n          {currentParticipant.name}\n          {currentUser ? \"(Вы)\" : \"\"}\n        </div>\n      </Card>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport \"./Participants.css\";\nimport { connect } from \"react-redux\";\nimport { Participant } from \"./Participant/Participant.component\";\n\nconst Participants = (props) => {\n  const videoRef = useRef(null);\n  let participantKey = Object.keys(props.participants);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.srcObject = props.stream;\n      videoRef.current.muted = true;\n    }\n  }, [props.currentUser, props.stream]);\n\n  const currentUser = props.currentUser\n    ? Object.values(props.currentUser)[0]\n    : null;\n\n  let gridCol =\n    participantKey.length === 1 ? 1 : participantKey.length <= 4 ? 2 : 4;\n  const gridColSize = participantKey.length <= 4 ? 1 : 2;\n  let gridRowSize =\n    participantKey.length <= 4\n      ? participantKey.length\n      : Math.ceil(participantKey.length / 2);\n\n  const screenPresenter = participantKey.find((element) => {\n    const currentParticipant = props.participants[element];\n    return currentParticipant.screen;\n  });\n\n  if (screenPresenter) {\n    gridCol = 1;\n    gridRowSize = 2;\n  }\n  const participants = participantKey.map((element, index) => {\n    const currentParticipant = props.participants[element];\n    const isCurrentUser = currentParticipant.currentUser;\n    if (isCurrentUser) {\n      return null;\n    }\n    const pc = currentParticipant.peerConnection;\n    const remoteStream = new MediaStream();\n    let curentIndex = index;\n    if (pc) {\n      pc.ontrack = (event) => {\n        event.streams[0].getTracks().forEach((track) => {\n          remoteStream.addTrack(track);\n        });\n        const videElement = document.getElementById(\n          `participantVideo${curentIndex}`\n        );\n        if (videElement) videElement.srcObject = remoteStream;\n      };\n    }\n\n    return (\n      <Participant\n        key={curentIndex}\n        currentParticipant={currentParticipant}\n        curentIndex={curentIndex}\n        hideVideo={screenPresenter && screenPresenter !== element}\n        showAvatar={\n          !currentParticipant.video &&\n          !currentParticipant.screen &&\n          currentParticipant.name\n        }\n      />\n    );\n  });\n  return (\n    <div\n      style={{\n        \"--grid-size\": gridCol,\n        \"--grid-col-size\": gridColSize,\n        \"--grid-row-size\": gridRowSize,\n      }}\n      className={`participants`}\n    >\n      {participants}\n      <Participant\n        currentParticipant={currentUser}\n        curentIndex={participantKey.length}\n        hideVideo={screenPresenter && !currentUser.screen}\n        videoRef={videoRef}\n        showAvatar={currentUser && !currentUser.video && !currentUser.screen}\n        currentUser={true}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    participants: state.participants,\n    currentUser: state.currentUser,\n    stream: state.mainStream,\n  };\n};\n\nexport default connect(mapStateToProps)(Participants);\n","export const SET_MAIN_STREAM = \"SET_MAIN_STREAM\";\nexport const ADD_PARTICIPANT = \"ADD_PARTICIPANT\";\nexport const REMOVE_PARTICIPANT = \"REMOVE_PARTICIPANT\";\nexport const SET_USER = \"SET_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const UPDATE_PARTICIPANT = \"UPDATE_PARTICIPANT\";\n","import {\n  SET_MAIN_STREAM,\n  ADD_PARTICIPANT,\n  SET_USER,\n  REMOVE_PARTICIPANT,\n  UPDATE_USER,\n  UPDATE_PARTICIPANT,\n} from \"./actiontypes\";\n\nexport const setMainStream = (stream) => {\n  return {\n    type: SET_MAIN_STREAM,\n    payload: {\n      mainStream: stream,\n    },\n  };\n};\n\nexport const setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: {\n      currentUser: user,\n    },\n  };\n};\n\nexport const addParticipant = (user) => {\n  return {\n    type: ADD_PARTICIPANT,\n    payload: {\n      newUser: user,\n    },\n  };\n};\n\nexport const updateUser = (user) => {\n  return {\n    type: UPDATE_USER,\n    payload: {\n      currentUser: user,\n    },\n  };\n};\n\nexport const updateParticipant = (user) => {\n  return {\n    type: UPDATE_PARTICIPANT,\n    payload: {\n      newUser: user,\n    },\n  };\n};\n\nexport const removeParticipant = (userId) => {\n  return {\n    type: REMOVE_PARTICIPANT,\n    payload: {\n      id: userId,\n    },\n  };\n};\n","import React, { useRef, useEffect } from \"react\";\nimport MeetingFooter from \"../MeetingFooter/MeetingFooter.component\";\nimport Participants from \"../Participants/Participants.component\";\nimport \"./MainScreen.css\";\nimport { connect } from \"react-redux\";\nimport { setMainStream, updateUser } from \"../../store/actioncreator\";\n\nconst MainScreen = (props) => {\n  const participantRef = useRef(props.participants);\n\n  const onMicClick = (micEnabled) => {\n    if (micEnabled){\n      // const audio = new Audio(unmuteSound);\n      //   audio.play()\n    }else {\n      // const audio = new Audio(muteSound);\n      //   audio.play()\n    }\n    if (props.stream) {\n      props.stream.getAudioTracks()[0].enabled = micEnabled;\n      props.updateUser({ audio: micEnabled });\n    }\n  };\n  const onVideoClick = (videoEnabled) => {\n    if (props.stream) {\n      props.stream.getVideoTracks()[0].enabled = videoEnabled;\n      props.updateUser({ video: videoEnabled });\n    }\n  };\n\n  useEffect(() => {\n    participantRef.current = props.participants;\n  }, [props.participants]);\n\n  const updateStream = (stream) => {\n    for (let key in participantRef.current) {\n      const sender = participantRef.current[key];\n      if (sender.currentUser) continue;\n      const peerConnection = sender.peerConnection\n        .getSenders()\n        .find((s) => (s.track ? s.track.kind === \"video\" : false));\n      peerConnection.replaceTrack(stream.getVideoTracks()[0]);\n    }\n    props.setMainStream(stream);\n  };\n\n  const onScreenShareEnd = async () => {\n    const localStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n\n    localStream.getVideoTracks()[0].enabled = Object.values(\n      props.currentUser\n    )[0].video;\n\n    updateStream(localStream);\n\n    props.updateUser({ screen: false });\n  };\n\n  const onScreenClick = async () => {\n    let mediaStream;\n    if (navigator.getDisplayMedia) {\n      mediaStream = await navigator.getDisplayMedia({ video: true });\n    } else if (navigator.mediaDevices.getDisplayMedia) {\n      mediaStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n      });\n    } else {\n      mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: { mediaSource: \"screen\" },\n      });\n    }\n\n    mediaStream.getVideoTracks()[0].onended = onScreenShareEnd;\n\n    updateStream(mediaStream);\n\n    props.updateUser({ screen: true });\n  };\n  return (\n    <div className=\"wrapper\">\n      <div className=\"main-screen\">\n        <Participants />\n      </div>\n\n      <div className=\"footer\">\n        <MeetingFooter\n          onScreenClick={onScreenClick}\n          onMicClick={onMicClick}\n          onVideoClick={onVideoClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stream: state.mainStream,\n    participants: state.participants,\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\n    updateUser: (user) => dispatch(updateUser(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen);\n","import React, {useState} from 'react';\r\nimport { loginWithGoogle, auth, logout } from '../server/firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\n\r\nconst AuthProvider = (props) => {\r\n    const [user, setUser] = useAuthState(auth);\r\n\r\n    const login = async () => {\r\n        const user = await loginWithGoogle();\r\n\r\n        if (!user) {\r\n            // TODO: Handle failed login\r\n            //setUser(false);\r\n        }\r\n\r\n        //setUser(true);\r\n    };\r\n\r\n    setTimeout(logout, 7200000);  \r\n    const value = { user, login };\r\n    return <AuthContext.Provider value={value} {...props} />;\r\n};\r\n\r\n\r\nexport { AuthContext, AuthProvider};\r\n","import React from 'react';\r\nimport { AuthContext } from '../context/auth';\r\n\r\nfunction useAuth() {\r\n    const value = React.useContext(AuthContext);\r\n\r\n    if (!value) {\r\n        throw new Error(\"AuthContext's value is undefined.\");\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nexport { useAuth };\r\n","import MainScreen from \"./components/MainScreen/MainScreen.component\";\nimport firepadRef from \"./server/firebase\";\nimport \"./App.css\";\nimport React, { useEffect} from \"react\";\nimport {getDatabase, ref, child, onValue, push, onChildAdded, onChildRemoved, onChildChanged, remove, onDisconnect} from \"firebase/database\";\nimport {\n  setMainStream,\n  addParticipant,\n  setUser,\n  removeParticipant,\n  updateParticipant,\n} from \"./store/actioncreator\";\nimport { connect } from \"react-redux\";\nimport { useAuth } from \"./hooks/useAuth\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\n\nfunction App(props) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const room = localStorage.getItem(\"roomId\");\n  const urlTemp = location.pathname.split('/');\n  const urlRef = urlTemp[urlTemp.length-1];\n  if (room != urlRef){\n    //window.location.href = '/';\n    navigate(\"/\");\n  }\n  const userTemp = useAuth();\n  const userName = userTemp.user.displayName;\n  const getUserStream = async () => {\n    const localStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n\n    return localStream;\n  };\n  useEffect(async () => {\n    const stream = await getUserStream();\n    stream.getVideoTracks()[0].enabled = false;\n    props.setMainStream(stream);\n\n\n    onValue(connectedRef, (snap) => {\n      if (snap.val() === true) {\n        const defaultPreference = {\n          audio: true,\n          video: false,\n          screen: false,\n        };\n        const userStatusRef = push(participantRef,{\n          userName,\n          preferences: defaultPreference,\n        });\n        props.setUser({\n          [userStatusRef.key]: { name: userName, ...defaultPreference },\n        });\n        //userStatusRef.onDisconnect().remove();   \n        onDisconnect(userStatusRef).remove();\n       } \n    });\n  }, []);\n\n  const db = getDatabase();\n  const connectedRef = ref(db, \".info/connected\");\n  const fpdRef = child(firepadRef, urlRef);\n  const participantRef = child(fpdRef, \"participants\");\n  const isUserSet = !!props.user;\n  const isStreamSet = !!props.stream;\n\n  useEffect(() => {\n    if (isStreamSet && isUserSet) {\n      onChildAdded(participantRef, (snap) => {\n        const preferenceUpdateEvent1 = child(participantRef, snap.key);\n        const preferenceUpdateEvent = child(preferenceUpdateEvent1, \"preferences\");\n        onChildChanged(preferenceUpdateEvent, (preferenceSnap) => {\n          props.updateParticipant({\n            [snap.key]: {\n              [preferenceSnap.key]: preferenceSnap.val(),\n            },\n          });\n        });\n        const { userName: name, preferences = {} } = snap.val();\n        // const audio = new Audio(notifyFile);\n        // audio.play(); /////////////////////////////////////////////////////////////////////////////////////\n        props.addParticipant({\n          [snap.key]: {\n            name,\n            ...preferences,\n          },\n        });\n      });\n      onChildRemoved(participantRef, (snap) => {\n        // const audio = new Audio(unnotifyFile);\n        // audio.play();\n        props.removeParticipant(snap.key);\n      });\n    }\n  }, [isStreamSet, isUserSet]);\n\n  return (\n    <div className=\"App\">\n      <MainScreen />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stream: state.mainStream,\n    user: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\n    addParticipant: (user) => dispatch(addParticipant(user)),\n    setUser: (user) => dispatch(setUser(user)),\n    removeParticipant: (userId) => dispatch(removeParticipant(userId)),\n    updateParticipant: (user) => dispatch(updateParticipant(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { BrowserRouter, Routes, Route, HashRouter } from 'react-router-dom';\r\nimport { AuthenticatedApp } from '../AuthenticatedApp';\r\nimport App from '../../App';\r\n\r\nfunction Router() {\r\n    return (\r\n        <HashRouter>\r\n            <Routes>\r\n                <Route exact path=\"/room/:id\" element={<App />} />\r\n                <Route exact path=\"/\" element={<AuthenticatedApp />} />\r\n            </Routes>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport { Router };","import { useAuth } from '../../hooks/useAuth';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { auth, logInWithEmailAndPassword } from \"../../server/firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport './styles.css';\r\n\r\nfunction UnauthenticatedApp() {\r\n    const { login } = useAuth();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, loading, error] = useAuthState(auth);\r\n    //const navigate = useNavigate();\r\n\r\n    return (\r\n        <>\r\n            <h2 className='unauthLbl'>Необходимо произвести вход</h2>\r\n            <div>\r\n            <div className=\"login\">\r\n                <button onClick={login} className=\"login\">\r\n                    Войти с помощью Google\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport { UnauthenticatedApp };","import { AuthenticatedApp } from './components/AuthenticatedApp';\r\nimport { Router } from './components/Router/router';\r\nimport { UnauthenticatedApp } from './components/UnauthenticatedApp';\r\nimport { useAuth } from './hooks/useAuth';\r\nimport './start.css';\r\n\r\nfunction App() {\r\n     const { user } = useAuth();\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {user ? <Router /> : <UnauthenticatedApp />}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firepadRef from \"./firebase\";\nimport { store } from \"../index\";\nimport {child, onChildAdded, push, set, update} from \"firebase/database\";\n\n  // const urlTemp = window.location.pathname.split('/');\n  // const urlRef = urlTemp[urlTemp.length-1];\n  // const fpdRef = child(firepadRef, urlRef);\n  // const participantRef = child(fpdRef, \"participants\");\n  var participantRef = null;\n\nexport const updatePreference = (userId, preference) => {\n  const currentParticipantRef1 = child(participantRef, userId);\n  const currentParticipantRef = child(currentParticipantRef1, \"preferences\");\n  setTimeout(() => {\n    update(currentParticipantRef, preference);\n  });\n};\n\nexport const createOffer = async (peerConnection, receiverId, createdID) => {\n\n  const currentParticipantRef = child(participantRef, receiverId);\n  peerConnection.onicecandidate = (event) => {\n    event.candidate &&\n    push(child(currentParticipantRef, \"offerCandidates\"), { ...event.candidate.toJSON(), userId: createdID });\n      // currentParticipantRef\n      //   .child(\"offerCandidates\")\n      //   .push({ ...event.candidate.toJSON(), userId: createdID });\n  };\n\n  const offerDescription = await peerConnection.createOffer();\n  await peerConnection.setLocalDescription(offerDescription);\n\n  const offer = {\n    sdp: offerDescription.sdp,\n    type: offerDescription.type,\n    userId: createdID,\n  };\n\n  //await currentParticipantRef.child(\"offers\").push().set({ offer });\n  await set(push(child(currentParticipantRef, \"offers\")), {offer});\n};\n\nexport const initializeListensers = async (userId) => {\n   const urlTemp = window.location.hash.split('/');\n   const urlRef = urlTemp[urlTemp.length-1];\n   const fpdRef = child(firepadRef, urlRef);\n   participantRef = child(fpdRef, \"participants\");\n  const currentUserRef = child(participantRef, userId);\n  const currenOffers = child(currentUserRef,\"offers\");\n  onChildAdded(currenOffers, async (snapshot) => {\n    const data = snapshot.val();\n    if (data?.offer) {\n      const pc =\n        store.getState().participants[data.offer.userId].peerConnection;\n      await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n      await createAnswer(data.offer.userId, userId);\n    }\n  });\n\n    onChildAdded(child(currentUserRef, \"offerCandidates\"), (snapshot) => {\n    const data = snapshot.val();\n    if (data.userId) {\n      const pc = store.getState().participants[data.userId].peerConnection;\n      pc.addIceCandidate(new RTCIceCandidate(data));\n    }\n  });\n\n  onChildAdded(child(currentUserRef, \"answers\"),(snapshot) => {\n    const data = snapshot.val();\n    if (data?.answer) {\n      const pc =\n        store.getState().participants[data.answer.userId].peerConnection;\n      const answerDescription = new RTCSessionDescription(data.answer);\n      pc.setRemoteDescription(answerDescription);\n    }\n  });\n\n  onChildAdded(child(currentUserRef, \"answerCandidates\"), (snapshot) => {\n    const data = snapshot.val();\n    if (data.userId) {\n      const pc = store.getState().participants[data.userId].peerConnection;\n      pc.addIceCandidate(new RTCIceCandidate(data));\n    }\n  });\n\n\n};\n\nconst createAnswer = async (otherUserId, userId) => {\n  const pc = store.getState().participants[otherUserId].peerConnection;\n  const participantRef1 = child(participantRef, otherUserId);\n  pc.onicecandidate = (event) => {\n    event.candidate &&\n    push(child(participantRef1, \"answerCandidates\"), { ...event.candidate.toJSON(), userId: userId });\n      // participantRef1\n      //   .child(\"answerCandidates\")\n      //   .push({ ...event.candidate.toJSON(), userId: userId });\n  };\n\n  const answerDescription = await pc.createAnswer();\n  await pc.setLocalDescription(answerDescription);\n\n  const answer = {\n    type: answerDescription.type,\n    sdp: answerDescription.sdp,\n    userId: userId,\n  };\n\n  //await participantRef1.child(\"answers\").push().set({ answer });\n  await set(push(child(participantRef1, \"answers\")), {answer});\n};\n","import {\n  SET_MAIN_STREAM,\n  ADD_PARTICIPANT,\n  SET_USER,\n  REMOVE_PARTICIPANT,\n  UPDATE_USER,\n  UPDATE_PARTICIPANT,\n} from \"./actiontypes\";\n\nimport {\n  createOffer,\n  initializeListensers,\n  updatePreference,\n} from \"../server/peerConnection\";\n\nlet defaultUserState = {\n  mainStream: null,\n  participants: {},\n  currentUser: null,\n};\n\nconst servers = {\n  iceServers: [\n    {\n      urls: [\n        \"stun:stun1.l.google.com:19302\",\n        \"stun:stun2.l.google.com:19302\",\n        \"stun:stun.l.google.com:19302\",\n        \"stun:stun3.l.google.com:19302\",\n        \"stun:stun4.l.google.com:19302\",\n        \"stun:stun.services.mozilla.com\",\n      ],\n    },\n  ],\n  iceCandidatePoolSize: 10,\n};\n\nconst generateColor = () =>\n  \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n\nexport const userReducer = (state = defaultUserState, action) => {\n  if (action.type === SET_MAIN_STREAM) {\n    let payload = action.payload;\n    state = { ...state, ...payload };\n    return state;\n  } else if (action.type === ADD_PARTICIPANT) {\n    let payload = action.payload;\n    const currentUserId = Object.keys(state.currentUser)[0];\n    const newUserId = Object.keys(payload.newUser)[0];\n    if (state.mainStream && currentUserId !== newUserId) {\n      payload.newUser = addConnection(\n        payload.newUser,\n        state.currentUser,\n        state.mainStream\n      );\n    }\n\n    if (currentUserId === newUserId)\n      payload.newUser[newUserId].currentUser = true;\n    payload.newUser[newUserId].avatarColor = generateColor();\n    let participants = { ...state.participants, ...payload.newUser };\n    state = { ...state, participants };\n    return state;\n  } else if (action.type === SET_USER) {\n    let payload = action.payload;\n    let participants = { ...state.participants };\n    const userId = Object.keys(payload.currentUser)[0];\n    payload.currentUser[userId].avatarColor = generateColor();\n    initializeListensers(userId);\n    state = { ...state, currentUser: { ...payload.currentUser }, participants };\n    return state;\n  } else if (action.type === REMOVE_PARTICIPANT) {\n    let payload = action.payload;\n    let participants = { ...state.participants };\n    delete participants[payload.id];\n    state = { ...state, participants };\n    return state;\n  } else if (action.type === UPDATE_USER) {\n    let payload = action.payload;\n    const userId = Object.keys(state.currentUser)[0];\n    updatePreference(userId, payload.currentUser);\n    state.currentUser[userId] = {\n      ...state.currentUser[userId],\n      ...payload.currentUser,\n    };\n    state = {\n      ...state,\n      currentUser: { ...state.currentUser },\n    };\n    return state;\n  } else if (action.type === UPDATE_PARTICIPANT) {\n    let payload = action.payload;\n    const newUserId = Object.keys(payload.newUser)[0];\n\n    payload.newUser[newUserId] = {\n      ...state.participants[newUserId],\n      ...payload.newUser[newUserId],\n    };\n    let participants = { ...state.participants, ...payload.newUser };\n    state = { ...state, participants };\n    return state;\n  }\n  return state;\n};\n\nconst addConnection = (newUser, currentUser, stream) => {\n  const peerConnection = new RTCPeerConnection(servers);\n  stream.getTracks().forEach((track) => {\n    peerConnection.addTrack(track, stream);\n  });\n  const newUserId = Object.keys(newUser)[0];\n  const currentUserId = Object.keys(currentUser)[0];\n\n  const offerIds = [newUserId, currentUserId].sort((a, b) =>\n    a.localeCompare(b)\n  );\n\n  newUser[newUserId].peerConnection = peerConnection;\n  if (offerIds[0] !== currentUserId)\n    createOffer(peerConnection, offerIds[0], offerIds[1]);\n  return newUser;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Start from \"./start\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { userReducer } from \"./store/reducer\";\nimport { AuthProvider } from \"./context/auth\";\nimport { HashRouter, Route, Routes, BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\n\nexport const store = createStore(userReducer);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AuthProvider>\n        <Start/>\n      </AuthProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}